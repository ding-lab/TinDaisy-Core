# Combine VCF files from several callers into one
# The following files are combined:
# * strelka SNV
# * strelka indel (sindel)
# * varscan SNV
# * varscan indel (aka varindel)
# * mutect SNV 
# * pindel indel

# Note, Song uses vaf_filter_v1.3.pl to implement 2/3 filtering strategy

# --bypass_merge - skips merge filter by retaining all reads
# $bypass is an optional flag which if set will bypass the filter and retain all reaads

# After merging, we filter to retain only those SNVs which are called by 2/3 callers

# CWL-specific changes
# * Get rid of unused arguments
# * pass all input VCFs
# * Output port: merged/merged.filtered.vcf

sub merge_vcf {
    my $results_dir = shift;
    my $job_files_dir = shift;
    my $REF = shift;

    my $strelka_snv_vcf = shift;
    my $strelka_indel_vcf = shift; # new
    my $varscan_snv_vcf = shift;
    my $varscan_indel_vcf = shift;
    my $mutect_vcf = shift; # new
    my $pindel_vcf = shift;
    my $bypass_merge = shift;
    my $debug = shift;


    my $bypass_str = $bypass_merge ? "--bypass_merge" : "";
    my $debug_str = $debug ? "--debug" : "";

    my $filter_results = "$results_dir/merged";
    system("mkdir -p $filter_results");


    my $merger_out_tmp = "$filter_results/merged.vcf";
    my $merger_out = "$filter_results/merged.filtered.vcf";

    my $runfn = "$job_files_dir/j8_merge_vcf.sh";
    print STDERR "Writing to $runfn\n";
    open(OUT, ">$runfn") or die $!;

#New merge script from SomaticWrapper.working/somaticwrapper.pl
#   java \${JAVA_OPTS} -jar $gatk -R $h38_REF -T CombineVariants -o \${MERGER_OUT} 
#       --variant:varscan \${VARSCAN_VCF} 
#       --variant:strelka \${STRELKA_VCF} 
#       --variant:mutect \${MUTECT_VCF} 
#       --variant:varindel \${VARSCAN_INDEL} 
#       --variant:sindel \${STRELKA_INDEL} 
#       --variant:pindel \${PINDEL_VCF_FILTER} 
#       -genotypeMergeOptions PRIORITIZE -priority strelka,varscan,mutect,sindel,varindel,pindel

# debug NOTE: mutect VCF results in the following error when merging:
# SequenceDictionaryUtils - Input files /data2/mutect_result.vcf and reference have incompatible contigs. Please see https://software.broadinstitute.org/gatk/documentation/article?id=63for more information. Error details: The contig order in /data2/mutect_result.vcf and reference is not the same; to fix this please see: (https://www.broadinstitute.org/gatk/guide/article?id=1328),  which describes reordering contigs in BAM and VCF files..
# The flag -U ALLOW_SEQ_DICT_INCOMPATIBILITY turns this error into a warning.  However, the source of this incompatiblity is not clear, since the references are
# the same for all C3L-00004

    print OUT <<"EOF";
#!/bin/bash
export JAVA_OPTS=\"-Xmx2g\"
 java \$JAVA_OPTS -jar $SWpaths::gatk_jar -R $REF -T CombineVariants -o $merger_out_tmp \\
    --variant:varscan $varscan_snv_vcf \\
    --variant:strelka $strelka_snv_vcf \\
    --variant:mutect $mutect_vcf \\
    --variant:varindel $varscan_indel_vcf \\
    --variant:sindel $strelka_indel_vcf \\
    --variant:pindel $pindel_vcf \\
    -genotypeMergeOptions PRIORITIZE -priority strelka,varscan,mutect,sindel,varindel,pindel \\
    -U ALLOW_SEQ_DICT_INCOMPATIBILITY

# Evaluate return value see https://stackoverflow.com/questions/90418/exit-shell-script-based-on-process-exit-code
rc=\$?
if [[ \$rc != 0 ]]; then
    >&2 echo Fatal error \$rc: \$!.  Exiting.
    exit \$rc;
fi
 
>&2 echo Merged unfiltered VCF written to $merger_out_tmp

>&2 echo Filter merged VCF file to exclude snv calls generated by just one caller.
export PYTHONPATH="$SWpaths::filter_dir:\$PYTHONPATH"
bash $SWpaths::filter_dir/run_merged_filter.sh $merger_out_tmp $merger_out $bypass_str $debug_str

rc=\$?
if [[ \$rc != 0 ]]; then
    >&2 echo Fatal error \$rc: \$!.  Exiting.
    exit \$rc;
fi

>&2 echo Written final result to $merger_out

EOF

    close OUT;
    my $cmd = "bash < $runfn\n";
    print STDERR "Executing:\n $cmd \n";

    my $return_code = system ( $cmd );
    die("Exiting ($return_code).\n") if $return_code != 0;
}

1;
